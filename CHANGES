$MODULE=Apache::ASP; $VERSION = .08;

+ = improvement; - = bug fix

++SSI with Apache::Filter & Apache::SSI, see config options & ./eg files
  Currently filtering only works in the direction Apache::ASP -> Apache::SSI,
  will not work the other way around, as SSI must come last in a set of filters
+ SSI file includes may reference files in the Global directory, better code sharing
- <% @array... %> no longer dropped from code.
+ perl =pod comments are stripped from script before compiling, and associated
  PodComments configuration options.
+ Command line cgi/asp script takes various options, and allows execution
  of multiple asp scripts at one time.  This script should be used for
  command line debugging.  This is also the beginning of building
  a static site from asp scripts with the -b option, suppressing headers.
+ $Response->AddHeader('Set-Cookie') works for multiple cookies.
- $Response->Cookies('foo', '0') works, was dropping 0 because of boolean test
- Fixed up some config doc errors.

$MODULE=Apache::ASP; $VERSION = .07;

- removed SIG{__WARN__} handler, it was a bad idea.
- fixes file locking on QNX, work around poor flock porting
+ removed message about Win32::OLE on UNIX platforms from Makefile.PL
- Better lock garbage collection.  Works with StatINC seemlessly.
- Multiple select forms now work in array context with $Response->Form()
	@values = $Response->Form('multi');
- Better CGI.pm compatibility with $r->header_out('Content-type'),
  improved garabage collection under modperl, esp. w/ file uploads

$VERSION = .06

+ Application_OnStart & Application_OnEnd event handlers support.
- Compatible with CGI.pm 2.46 headers() 
- Compatible with CGI.pm $q = new CGI(), caveat: does not set params 
+ use strict; followed by use of objects like $Session is fine.
- Multiple cookies may be set per script execution.
+ file upload implemented via CGI.pm
++global.asa implemented with events Session_OnStart and Session_OnEnd
  working appropriately.
+ StateDir configuration directive implemented.
  StateDir allows the session state directory to be specified separately 
  from the Global directory, useful for OS's with caching filesystems.
+ StateManager config directive.  StateManager specifies how frequently
  Sessions are cleaned up, with 10 (default) meaning that old Sessions
  will be cleaned up 10 times per SessionTimeout period (default 20 minutes).
+ $Application->SessionCount() implemented, non-portable method.
	: returns the number of currently active sessions
- STOP button fix.  Users may hit STOP button during script 
  execution, and Apache::ASP will cleanup with a routine registered
  in Apache's $r->register_cleanup.  Works well supposedly.
+ PerlScript compatibility work, trying to make ports smoother.
	: Collection emulator, no ->{Count} property
	: $.*(.*)->{Item} parsed automatically, 
	  shedding the ->{Item} for Collection support (? better way ?)
	: No VBScript dates support, just HTTP RFC dates with HTTP::Date
	: Win32::OLE::in not supported, just use "keys %{$Collection}"	
+ ./cgi/asp script for testing scripts from the command line
	: will be upgraded to CGI method of doing asp
	: is not "correct" in anyway, so not documented for now
	  but still useful
+ strips DOS carriage returns from scripts automatically, so that
  programs like FrontPage can upload pages to UNIX servers
  without perl choking on the extra \r characters.

$VERSION = .05

+ Added PERFORMANCE doc, which includes benchmarks + hints.
+ Better installation warnings and errors for other modules required. 
- Turned off StatINC in eg/.htaccess, as not everyone installs Devel::Symdump
- Fixed AUTOLOAD state bug, which wouldn't let you each through state
  objects, like %{$Session}, or each %$Session, (bug introduced in v.04)
+ Parses ASP white space better.  HTML output matches author's intent
  by better dealing with white space surrounding <% perl blocks %>
- Scalar insertion code <%=$foo%> can now span many lines.
+ Added include.t test script for includes.
+ Script recompiles when included files change.
+ Files can be included in script with 
  SSI <!--#include file="filename"--> syntax, needs to be
  done in ASP module to allow compilation of included code and html 
  into script.  Future chaining with Apache::SSI will allow static 
  html includes, and other SSI directives

$VERSION = .04;

+ Example script eg/cgi.htm demonstrating CGI.pm use for output.
+ Optimized ASP parsing, faster and more legible executing code
	: try 'die();' in code with setting PerlSetVar Debug 2
+ Cleaned up code for running with 'use strict'
- Fixed directory handle leak on Solaris, from not closing after opendir()
+ StatINC overhaul.  StatINC setting now works as it should, with 
  the caveat that exported functions will not be refreshed.
+ NoState setting optimization, disallows $Application & $Session
+ $Application->*Lock() functions implemented
- SoftRedirect setting for those who want scripts to keep running
  after a Redirect()
+ SessionSerialize setting to lock session while script is running
	: Microsoft ASP style session locking
	: For a session, scripts execute one at a time 
	: NOT recommended use, please see note.
- MLDBM can be used for other things without messing up internal use
	: before if it was used with different DB's and serializers,
	  internal state could be lost.
-- State file locking.  Corruption worries, and loss of data no more.
+ CGI header support, developer can use CGI.pm for *output*, or just print()
	: print "Set-Cookie: test=cookie\n", and things will just work
	: use CGI.pm for output
	: utilizes $r->send_cgi_header(), thanks Doug!
+ Improved Cookie implementation, more flexible and complete
	- Domain cookie key now works
	: Expire times now taken from time(), and relative time in sec
	: Request->Cookies() reading more flexible, with wantarray()
	  on hash cookie values, %hash = $Request->Cookie('test');
- make test module naming correction, was t.pm, now T.pm for Unix
+ POD / README cleanup, formatting and HTML friendly.

$VERSION = .03;

+ Installation 'make test' now works
+ ActiveX objects on Win32 implemented with $Server->CreateObject() 
+ Cookies implemented: $Response->Cookies() & $Request->Cookies()
- Fixed $Response object API, converting some methods to object members.
  Deprecated methods, but backwards compatible.
+ Improved error messaging, debug output
+ $, influences $Response->Write(@strings) behavior
+ perl print() works, sending output to $Response object
+ $Response->Write() prints scalars, arrays, and hashes.  Before only scalars.
+ Begin implementation of $Server object.
+ Implemented $Response->{Expires} and $Response->{ExpiresAbsolute}
+ Added "PerlSetVar StatINC" config option
+ $0 is aliased to current script filename
+ ASP Objects ($Response, etc.) are set in main package
  Thus notation like $main::Response->Write() can be used anywhere.

$VERSION = .02;

++ Session Manager, won't break under denial of service attack
+ Fleshed out $Response, $Session objects, almost full implementation.
+ Enormously more documentation.
- Fixed error handling with Debug = 2.
- Documentation fixed for pod2man support.  README now more man-like.
- Stripped \r\n dos characters from installation files
- 755 mode set for session state directory when created
- Loads Win32/OLE properly, won't break with UNIX

$VERSION = .01;

Syntax Support
--------------
Intial realease, could be considered alpha software.
Allows developers to embed perl in html ASP style.

<!-- sample here -->
<html>
<body>
<% for(1..10) { %>
	counting: <%=$_%> <br>
<% } %>
</body>
</html>

ASP Objects
-----------
$Session, $Application, $Response, $Request objects available
for use in asp pages.

$Session & $Application data is preserved using SDBM files.

$Session id's are tracked through the use of cookies.

Security
--------
Timeouts any attempt to use a session id that doesn't already 
exist.  Should stop hackers, since there is no wire speed guessing
cookies.







